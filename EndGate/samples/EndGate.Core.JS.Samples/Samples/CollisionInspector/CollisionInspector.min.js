var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i},CollisionInspector=function(n){function t(t){var i=this;n.call(this,t),this._collidableShapes=[],this._draggingObject=null,this._rotatingObject=null,this._decreasingZIndex=0,this.Input.Mouse.OnDown.Bind(function(n){var t=i.GetShapeAt(n.Position);t!==null&&(n.Button==="Left"?(i._draggingObject=t,i._dragOffset=n.Position.Subtract(t.Bounds.Position)):n.Button==="Right"&&(i._rotatingObject=t))}),this.Input.Mouse.OnUp.Bind(function(){i._draggingObject=null,i._dragOffset=null,i._rotatingObject=null}),this.Input.Mouse.OnMove.Bind(function(n){i._currentMousePosition=n.Position})}return __extends(t,n),t.prototype.Add=function(n){this._collidableShapes.push(n),n.Graphic.ZIndex=n.TextPosition.ZIndex=this._decreasingZIndex--,this.Scene.Add(n.Graphic),this.CollisionManager.Monitor(n)},t.prototype.Update=function(n){var r,u,i,t;for(this._draggingObject!==null?this._draggingObject.Move(this._currentMousePosition.Add(this._dragOffset.Negate())):this._rotatingObject!==null&&(i=this._currentMousePosition.Subtract(this._rotatingObject.Bounds.Position),r=i.Magnitude()/100,u=i.Sign().X,this._rotatingObject.Rotate(r*n.ElapsedSecond*u)),t=0;t<this._collidableShapes.length;t++)this._collidableShapes[t].Update(n)},t.prototype.GetShapeAt=function(n){for(var t=0;t<this._collidableShapes.length;t++)if(this._collidableShapes[t].Bounds.ContainsPoint(n))return this._collidableShapes[t];return null},t}(eg.Game)